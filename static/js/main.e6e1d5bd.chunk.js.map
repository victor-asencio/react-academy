{"version":3,"sources":["components/Header.js","components/Card.js","components/FlipCard.js","icons/icons.js","index.js"],"names":["Header","props","intentos","resetHandler","className","onClick","Card","cardClick","e","preventDefault","index","this","children","color","React","Component","FlipCard","card","handleClick","icon","isFlipped","flipDirection","icons","App","state","previousCard","aciertos","lockClick","cards","getGridElements","resetGame","bind","map","elem","i","key","handleCardEvent","setState","cardId","console","log","secondCard","prevState","id","setTimeout","alert","newPos","temp","push","resolved","length","Math","floor","random","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e6e1d5bd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header(props) {\r\n\r\n    let { intentos, resetHandler } = props;\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"title\">\r\n                Memory Game\r\n            </div>\r\n            <div className=\"board\">\r\n                Intentos: {intentos}\r\n                <div className=\"reset-button\">\r\n                    <button className=\"reset\" onClick={resetHandler}>Reset Game</button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default class Card extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    cardClick = (e) => {\r\n        e.preventDefault();\r\n        this.props.onClick(this.props.index);\r\n    }\r\n\r\n    render() {\r\n\r\n        let { children, color } = this.props;\r\n\r\n        return (\r\n            <div onClick={this.cardClick} className={`card ${color}`}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport Card from './Card.js';\r\n\r\nfunction FlipCard(props){\r\n\r\n   \r\n  let { card, handleClick, index } = props;\r\n  let { icon, isFlipped } = card;\r\n\r\n  return (\r\n    <div className='card-container'>\r\n      <ReactCardFlip isFlipped={isFlipped} flipDirection='horizontal'>\r\n        <Card color='card-back' index={index} onClick={handleClick}>\r\n          <i className='fas fa-question-circle'></i>\r\n        </Card>\r\n        <Card color='card-front' index={index} onClick={handleClick}>\r\n          <i className={`fas ${icon}`}></i>\r\n        </Card>\r\n      </ReactCardFlip>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FlipCard;","\r\nexport let icons = [\r\n    \"fa-ambulance\",\r\n    \"fa-anchor\",\r\n    \"fa-angle-double-down\",\r\n    \"fa-assistive-listening-systems\",\r\n    \"fa-bahai\",\r\n    \"fa-band-aid\",\r\n    \"fa-bicycle\",\r\n    \"fa-bomb\",\r\n    \"fa-bug\",\r\n    \"fa-cat\",\r\n    \"fa-child\",\r\n    \"fa-dumbbell\"\r\n];","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from './components/Header.js';\r\n//import ModalName from './components/ModalName.js';\r\nimport FlipCard from './components/FlipCard.js'\r\n\r\nimport { icons } from './icons/icons.js'\r\n\r\n\r\nimport './style/reset.css';\r\nimport './style/index.css';\r\n\r\nexport default class  App extends React.Component {\r\n  \r\n  cards;\r\n  state;\r\n  aciertos;\r\n  lockClick;\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      intentos: 0,\r\n      previousCard: null,\r\n    }\r\n    this.aciertos = 0;\r\n    this.lockClick = false;\r\n    this.cards = this.getGridElements();\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className='main'>\r\n        {/*<ModalName/>*/}\r\n        {/*<CardGrid ref='reset' cards={this.cards} handleCardEvent={this.handleCardEvent.bind(this)}/> */ }\r\n        <Header intentos={this.state.intentos} resetHandler={this.resetGame.bind(this)}/>\r\n        <div className='card-grid'>\r\n          {\r\n            this.cards.map((elem, i)=>{\r\n                return <FlipCard key={i} index={i} handleClick={this.handleClick.bind(this)} card={elem} handleCardEvent={this.handleCardEvent}/>\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  resetGame(){\r\n    this.cards = this.getGridElements();\r\n    this.setState({\r\n      intentos: 0,\r\n      previousCard: null,\r\n    })\r\n  }\r\n\r\n  handleClick(cardId){\r\n\r\n    console.log('lockClick: ', this.lockClick)\r\n\r\n    if(!this.lockClick){\r\n\r\n      if(!this.lockClick && !this.state.previousCard){\r\n        console.log('entro');\r\n        this.cards[cardId].isFlipped = true;\r\n        this.setState({\r\n          previousCard: this.cards[cardId],\r\n        })\r\n      }else{\r\n        this.lockClick = true;\r\n        let previousCard = this.state.previousCard;\r\n        let secondCard = this.cards[cardId];\r\n        \r\n        this.setState( prevState => {\r\n          return{\r\n            intentos : prevState.intentos+1,\r\n          }\r\n        })\r\n        \r\n        secondCard.isFlipped = true;\r\n        \r\n        if(previousCard.id === secondCard.id){\r\n          console.log(\"coincidencia\");\r\n\r\n          this.lockClick = false;\r\n          this.setState({\r\n            previousCard: null,\r\n          });\r\n          this.aciertos++;\r\n\r\n          if(this.aciertos===10){\r\n            setTimeout(()=>{\r\n              alert(`Ganaste en ${this.state.intentos} intentos!`);\r\n              this.resetGame();\r\n            }, 1000);\r\n          }\r\n\r\n        }else{\r\n          setTimeout(()=>{\r\n            secondCard.isFlipped = false;\r\n            previousCard.isFlipped = false;\r\n            this.lockClick = false;\r\n            this.setState({\r\n              previousCard: null,\r\n            });\r\n          }, 1000)\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  getGridElements(){\r\n    \r\n    let cards = [],\r\n        newPos,\r\n        temp;\r\n\r\n    for(let i = 0; i<10; i++){\r\n        cards.push({\r\n          id : i,\r\n          icon : icons[i],\r\n          isFlipped: false,\r\n          resolved: false,\r\n        });\r\n        cards.push({\r\n          id : i,\r\n          icon : icons[i],\r\n          isFlipped: false,\r\n          resolved: false,\r\n        });\r\n    }\r\n\r\n    /* Shuffle array two times */\r\n    for( let i = cards.length - 1; i>0; i--){\r\n      newPos = Math.floor(Math.random()*(i+1));\r\n      temp = cards[i];\r\n      cards[i] = cards[newPos];\r\n      cards[newPos] = temp;\r\n    }\r\n\r\n    for( let i = cards.length - 1; i>0; i--){\r\n      newPos = Math.floor(Math.random()*(i+1));\r\n      temp = cards[i];\r\n      cards[i] = cards[newPos];\r\n      cards[newPos] = temp;\r\n    }\r\n    \r\n    return cards;\r\n  }\r\n    \r\n}\r\n\r\n\r\nReactDOM.render(<App/>,document.querySelector('#root'));"],"sourceRoot":""}